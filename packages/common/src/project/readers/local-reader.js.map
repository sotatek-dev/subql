{"version":3,"file":"local-reader.js","sourceRoot":"","sources":["local-reader.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;;;;;;;;;;;;;;;;;AAEtC,uCAAyB;AACzB,2CAA6B;AAC7B,sDAA2B;AAI3B,MAAa,WAAW;IACtB,YAA6B,WAAmB;QAAnB,gBAAW,GAAX,WAAW,CAAQ;IAAG,CAAC;IAEpD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,MAAM;QACV,OAAO,iBAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAiB,CAAC;IACvE,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,OAAO,iBAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAgB;QAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACxB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACnC;QACD,IAAI;YACF,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACvC;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;CACF;AA1BD,kCA0BC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport yaml from 'js-yaml';\nimport {IPackageJson} from 'package-json-type';\nimport {Reader} from './reader';\n\nexport class LocalReader implements Reader {\n  constructor(private readonly projectPath: string) {}\n\n  get root(): string {\n    return this.projectPath;\n  }\n\n  async getPkg(): Promise<IPackageJson | undefined> {\n    return yaml.load(await this.getFile('package.json')) as IPackageJson;\n  }\n\n  async getProjectSchema(): Promise<unknown | undefined> {\n    return yaml.load(await this.getFile('project.yaml'));\n  }\n\n  async getFile(fileName: string): Promise<string | undefined> {\n    const file = path.join(this.projectPath, fileName);\n    if (!fs.existsSync(file)) {\n      return Promise.resolve(undefined);\n    }\n    try {\n      return fs.readFileSync(file, 'utf-8');\n    } catch (e) {\n      return undefined;\n    }\n  }\n}\n"]}